#!/bin/dash 
#=======================================================================
# File:      sch-dialog-question
# Created:   16/07/2015
# Purpose:   See usage function below 
# Copyright: Â© Bill Cane
# Email:     
#
# Licence: This program is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or(at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#=======================================================================
. /usr/bin/sch-constants
#=======================================================================

usage() {
cat << EOF
NAME
      sch-dialog-question - display question with Yes and No buttons

SYNOPSIS
      sch-dialog-question [OPTION] [ARG]
      
      -a <app-name>          appears left side of title
      
      -c <caption>           appears right side of title
      
      -q <question>          text of question
      
      -i <icon>              appears in title bar
      
      -h                     display usage
      
      -a, c, q, i are all required
      -h overrides any other options

DESCRIPTION

EXIT STATUS
      0      if 'Yes' pressed or -h option used
      1      if 'No' pressed

USAGE
      sch-dialog-question -a 'MyApp' -c 'doing something' -q 'MyQuestion' -i 'MyIcon'

EOF
}

App=''; Caption=''; Question=''; Icon='dialog-information'
a=1; c=1; q=1; i=1

while getopts ":a:c:q:i:h" Option
do
      case "$Option" in
            a ) a=0; App="$OPTARG";;
            c ) c=0; Caption="$OPTARG";;
            q ) q=0; Question="$OPTARG";;
            i ) i=0; Icon="$OPTARG";;
            h ) usage; exit 0 ;;
            * ) abend '11110' "Invalid option" ;;
      esac
done

[ $a -eq 0 ] || abend '91404' 'Missing option -a'
[ "$App" = '' ] && abend '52233' 'Missing argument to option -a'

[ $c -eq 0 ] || abend '41459' 'Missing option -c'
[ "$Caption" = '' ] && abend '60500' 'Missing argument to option -c'

[ $q -eq 0 ] || abend '35676' 'Missing option -q'
[ "$Question" = '' ] && abend '33446' 'Missing argument to option -q'

kdialog \
      --yesno "$(echo $Question |fmt -50 -u)" \
      --title "$App" \
      --icon "$Icon" \
      --caption "$Caption" 

# exit with status of kdialog

